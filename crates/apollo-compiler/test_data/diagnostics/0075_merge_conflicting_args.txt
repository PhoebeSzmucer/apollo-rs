[
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 630..+33 @72,
        labels: [
            Label {
                location: 611..+15 @72,
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: 646..+16 @72,
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: 595..+32 @72,
            redefined_selection: 630..+33 @72,
        },
    },
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 630..+33 @72,
        labels: [
            Label {
                location: 611..+15 @72,
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: 646..+16 @72,
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: 595..+32 @72,
            redefined_selection: 630..+33 @72,
        },
    },
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 749..+40 @72,
        labels: [
            Label {
                location: 730..+15 @72,
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: 765..+23 @72,
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: 714..+32 @72,
            redefined_selection: 749..+40 @72,
        },
    },
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 749..+40 @72,
        labels: [
            Label {
                location: 730..+15 @72,
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: 765..+23 @72,
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: 714..+32 @72,
            redefined_selection: 749..+40 @72,
        },
    },
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 876..+36 @72,
        labels: [
            Label {
                location: 853..+19 @72,
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: 892..+19 @72,
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: 837..+36 @72,
            redefined_selection: 876..+36 @72,
        },
    },
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 876..+36 @72,
        labels: [
            Label {
                location: 853..+19 @72,
                text: "field `doesKnowCommand` provides one argument value here",
            },
            Label {
                location: 892..+19 @72,
                text: "but a different value here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: 837..+36 @72,
            redefined_selection: 876..+36 @72,
        },
    },
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 985..+15 @72,
        labels: [
            Label {
                location: 966..+15 @72,
                text: "field `doesKnowCommand` is selected with argument `dogCommand` here",
            },
            Label {
                location: 985..+15 @72,
                text: "but argument `dogCommand` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: 950..+32 @72,
            redefined_selection: 985..+15 @72,
        },
    },
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 985..+15 @72,
        labels: [
            Label {
                location: 966..+15 @72,
                text: "field `doesKnowCommand` is selected with argument `dogCommand` here",
            },
            Label {
                location: 985..+15 @72,
                text: "but argument `dogCommand` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "doesKnowCommand",
            original_selection: 950..+32 @72,
            redefined_selection: 985..+15 @72,
        },
    },
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 1061..+18 @72,
        labels: [
            Label {
                location: 1053..+4 @72,
                text: "field `isAtLocation` is selected with argument `x` here",
            },
            Label {
                location: 1061..+18 @72,
                text: "but argument `x` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "isAtLocation",
            original_selection: 1040..+18 @72,
            redefined_selection: 1061..+18 @72,
        },
    },
    ApolloDiagnostic {
        cache: {
            72: "0075_merge_conflicting_args.graphql",
        },
        location: 1061..+18 @72,
        labels: [
            Label {
                location: 1053..+4 @72,
                text: "field `isAtLocation` is selected with argument `x` here",
            },
            Label {
                location: 1061..+18 @72,
                text: "but argument `x` is not provided here",
            },
        ],
        help: Some(
            "Fields with the same response name must provide the same set of arguments. Consider adding an alias if you need to select fields with different arguments.",
        ),
        data: ConflictingField {
            field: "isAtLocation",
            original_selection: 1040..+18 @72,
            redefined_selection: 1061..+18 @72,
        },
    },
]
